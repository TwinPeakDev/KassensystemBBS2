name: Docker Image CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:

  build_n_push:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Docker Build and Tag Prod
        run: docker build --load -t saile2204/kassensystem-bbs2-wob:latest-${{ steps.extract_branch.outputs.branch }} -t saile2204/kassensystem-bbs2-wob:${{ steps.extract_branch.outputs.branch }}-$GITHUB_SHA .

      - name: Docker Build and Tagd
        run: docker build --load -t saile2204/kassensystem-bbs2-wob:$(date +%s) .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERUSERNAME }}
          password: ${{ secrets.DOCKERPASSWORD }}

      - name: Push to Dockerhub
        run: |
          docker push saile2204/kassensystem-bbs2-wob:latest-${{ steps.extract_branch.outputs.branch }}
          docker push saile2204/kassensystem-bbs2-wob:${{ steps.extract_branch.outputs.branch }}-$GITHUB_SHA
      - name: Update Portainer Stack
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://portainer.nuv.systems/api/stacks/42?endpointId=2'
          method: 'PUT'
          customHeaders: '{"Content-Type": "application/json", "X-API-Key": "${{ secrets.PORTAINER_KEY }}"}'
          data: '{"env":[{"name": "ConnectionString","value":"value"}],"prune": true,"pullImage": true,"stackFileContent":"version:"2.1"\nnetworks:\n    portainer_internal:\n      external: true\nservices:\n  develop:\n    image: saile2204/kassensystem-bbs2-wob:latest-develop\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Etc/UTC\n    networks:\n      - portainer_internal\n    restart: unless-stopped"}'
@page "/produkte"

@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.EntityFrameworkCore;
@using Kassensystem.Data;
@using Kassensystem.Components;
@using Kassensystem.Data.Database
@inject NavigationManager Navigation
@inject IDbContextFactory<ApplicationDbContext> ContextFactory;
@inject DialogService DialogService

@implements IAsyncDisposable


<h3>Products</h3>

<RadzenButton Style="margin-bottom: 1rem" Text="Create new Product" Click="AddNewProduct" ></RadzenButton>

<ProductCardGrid Products="_products" State="ProductCardGrid.InteractionState.Edit" ></ProductCardGrid>




@code {
    private HubConnection? _hubConnection;
    private IEnumerable<Product>? _products;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/datahub"))
            .Build();
        
        _hubConnection.On("UpdatePayments", () => 
        {
            ///TODO: implement update after payment has been saved (maybe list past sales in a grid / update that grid)
        });
        
        _hubConnection.On("UpdateProducts", async () =>
        {
            await UpdateProductList();
        });

        await UpdateProductList();
        
        await _hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection is not null)
        {
            await _hubConnection.DisposeAsync();
        }
    }

    private async Task UpdateProductList()
    {
        var context = await ContextFactory.CreateDbContextAsync();
        _products = context.Products.Include(s => s.Image).ToList();
        await context.DisposeAsync();
        await InvokeAsync(StateHasChanged);
    }
    
    private async Task AddNewProduct()
    {
        await DialogService.OpenAsync<ProductDetail>($"Create new Product",
            new Dictionary<string, object>(),
            new DialogOptions() { Width = "fit-content", Height = "fit-content", Resizable = true, Draggable = true });
        
    }

}
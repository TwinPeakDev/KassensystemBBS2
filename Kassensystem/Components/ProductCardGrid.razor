@using Kassensystem.Data
@using Kassensystem.Pages
@inject DialogService DialogService

@if (Products != null || !Products.Any())
{
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap" >
        @foreach (var product in Products)
        {
            <div onclick="@(() => ProductClicked(product))" >
                <RadzenCard class="rz-ripple" >
                    @product.Name
                    <RadzenImage Path="@product.Image" ></RadzenImage>
                </RadzenCard>
            </div>
        }
    </RadzenStack>

    
    
}



@code {
    [Parameter]
    public IEnumerable<Product>? Products { get; set; }

    [Parameter]
    public InteractionState State { get; set; } = InteractionState.Edit;

    public enum InteractionState
    {
        Edit, 
        AddToCart,
    }

    [Parameter]
    public EventCallback<Product> ProductToCart { get; set; }
    


    async Task ProductClicked(Product product)
    {
        switch (State)
        {
            case InteractionState.Edit:
                await DialogService.OpenAsync<ProductDetail>($"Produkt {product.Name} bearbeiten",
                    new Dictionary<string, object>() { { "CurProduct", product } },
                    new DialogOptions() { Width = "fit-content", Height = "fit-content", Resizable = true, Draggable = true });
                break;
                
            case InteractionState.AddToCart:
                await ProductToCart.InvokeAsync(product);
                break;

        }
    }
}